local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "TOKAI-HUB-Zaibatsu+RP",
    Icon = 0,
    LoadingTitle = "TOKAI",
    LoadingSubtitle = "by LONGTOKAI",
    ShowText = "Rayfield",
    Theme = "Bloom",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

local Tab = Window:CreateTab("Main", 4483362458)
local Section = Tab:CreateSection("Section Example")

local Tab = Window:CreateTab("Misc", 4483362458)

Tab:CreateButton({
    Name = "emote7yd7",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-7yd7-I-Emote-Script-48024"))()
    end
})

Tab:CreateButton({
    Name = "IY",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

Tab:CreateButton({
    Name = "Invisible",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostPlayer352/Test4/refs/heads/main/Invisible%20Mode"))()
    end
})

local Tab = Window:CreateTab("Teleporter", 4483362458)

Tab:CreateButton({
    Name = "Lobby",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1576.58, 16.62, 1960.95)
        end
    end
})

Tab:CreateButton({
    Name = "SHOP CAR",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1565.06, 16.71, 1808.98)
        end
    end
})

Tab:CreateButton({
    Name = "hamburger",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1772.07, 16.61, 1841.31)
        end
    end
})

Tab:CreateButton({
    Name = "Fashion store",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1709.19, 9.60, 1631.97)
        end
    end
})

Tab:CreateButton({
    Name = "Shop Yum Yum",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1730.90, 16.61, 1521.29)
        end
    end
})

Tab:CreateButton({
    Name = "Bank",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1594.12, 16.85, 1583.84)
        end
    end
})

Tab:CreateButton({
    Name = "bean bwer-caffe",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1601.99, 16.64, 1461.84)
        end
    end
})

Tab:CreateButton({
    Name = "IBN",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1306.53, 174.84, 1320.01)
        end
    end
})

Tab:CreateButton({
    Name = "Police 1",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1094.87, 24.10, 1593.59)
        end
    end
})

Tab:CreateButton({
    Name = "Police 2",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1834.87, 16.31, 1500.66)
        end
    end
})

Tab:CreateButton({
    Name = "Yakiniku",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1883.83, 16.01, 1413.41)
        end
    end
})

Tab:CreateButton({
    Name = "Meitetsu-hospital ",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1983.45, 16.66, 1081.48)
        end
    end
})
 Tab:CreateButton({
    Name = "Sea-beach",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1836.51, 16.46, 918.27)
        end
    end
})

Tab:CreateButton({
    Name = "gas station",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2971.77, 16.60, 1102.05)
        end
    end
})

Tab:CreateButton({
    Name = "temple-canon-hot spring complex",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2771.25, 142.56, -409.14)
        end
    end
})

Tab:CreateButton({
    Name = "obstacle",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-205.39, 17.78, -361.61)
        end
    end
})

Tab:CreateButton({
    Name = "Bar",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1934.04, 16.20, 2085.67)
        end
    end
})

Tab:CreateButton({
    Name = "football club ",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1894.43, 152.71, 2052.70)
        end
    end
})

Tab:CreateButton({
    Name = "fire department ",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2358.01, 16.61, 1171.54)
        end
    end
})

Tab:CreateButton({
    Name = "gun1 item",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(3065.43, 6.50, 983.16)
        end
    end
})

Tab:CreateButton({
    Name = "gun 2 item",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2903.74, 11.44, -568.22)
        end
    end
})

Tab:CreateButton({
    Name = "gun3 items",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-1711.93, 19.95, -571.85)
        end
    end
})

Tab:CreateButton({
    Name = "gun4 items",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1060.81, 150.45, 1729.85)
        end
    end
})

Tab:CreateButton({
    Name = "gun5 items",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-296.20, 18.23, -624.81)
        end
    end
})

Tab:CreateButton({
    Name = "Police shop gun",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1014.14, 150.45, 1777.32)
        end
    end
})

Tab:CreateButton({
    Name = "sewer arena",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-4154.58, -197.29, 1692.40)
        end
    end
})

local Tab = Window:CreateTab("hidden teleporter item", 4483362458)

Tab:CreateButton({
    Name = "Toy car1",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(339.92, 206.67, -571.40)
        end
    end
})

Tab:CreateButton({
    Name = "Toy car2",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1759.59, 16.01, 1468.07)
        end
    end
})

Tab:CreateButton({
    Name = "Toy car3",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1055.25, 18.20, 1161.50)
        end
    end
})

Tab:CreateButton({
    Name = "Toy car4",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-1834.48, 17.32, -1179.66)
        end
    end
})

Tab:CreateButton({
    Name = "Toy car5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(3039.70, -52.06, -4776.76)
        end
    end
})

Tab:CreateButton({
    Name = "plush crab",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(1868.70, 41.52, 1444.50)
        end
    end
})

Tab:CreateButton({
    Name = "Mini Tokyo Tower",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(858.81, -12.33, 1597.81)
        end
    end
})

Tab:CreateButton({
    Name = "Canon mini",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2849.33, 151.29, -383.97)
        end
    end
})

Tab:CreateButton({
    Name = "mini temple gate",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2849.54, 101.06, -265.52)
        end
    end
})

Tab:CreateButton({
    Name = "mini old town gate",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2046.32, 16.61, 1438.46)
        end
    end
})

Tab:CreateButton({
    Name = "ae86.1/5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2936.67, 28.80, 1187.92)
        end
    end
})

Tab:CreateButton({
    Name = "ae86.2/5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(3193.79, 122.60, 1392.70)
        end
    end
})

Tab:CreateButton({
    Name = "ae86.3/5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(2587.60, 5.23, -674.54)
        end
    end
})

Tab:CreateButton({
    Name = "ae86.4/5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(156.27, 35.71, -1430.83)
        end
    end
})

Tab:CreateButton({
    Name = "ae86.5/5",
    Callback = function()
        local p = game.Players.LocalPlayer
        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            p.Character.HumanoidRootPart.CFrame = CFrame.new(-1821.14, 5.50, -1456.99)
        end
    end
})

local Tab = Window:CreateTab("Settings", 4483362458)

Rayfield:LoadConfiguration()
